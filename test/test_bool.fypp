program main
  use mod_unittest
  implicit none
  type(unittest) :: u
  logical        :: is_failed
  call u%init('Simple unittests', terminate_with_error_code=.false.)
  call u%assert_true(.true., is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%assert_true(.false., is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false(.true., is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false(.false., is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%assert_true([.true., .true., .true., .true., .true.], is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%assert_true(RESHAPE([.true., .true., .true., .true.], [2, 2]), is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%assert_true([.false., .true., .true., .true., .true.], is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_true(RESHAPE([.false., .true., .true., .true.], [2, 2]), is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_true([.false., .false., .false., .false., .false.], is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_true(RESHAPE([.false., .false., .false., .false.], [2, 2]), is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false([.true., .true., .true., .true., .true.], is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false(RESHAPE([.true., .true., .true., .true.], [2, 2]), is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false([.false., .true., .true., .true., .true.], is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false(RESHAPE([.false., .true., .true., .true.], [2, 2]), is_failed=is_failed)
  if (.not. is_failed) call error_stop(code=1)
  call u%assert_false([.false., .false., .false., .false., .false.], is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%assert_false(RESHAPE([.false., .false., .false., .false.], [2, 2]), is_failed=is_failed)
  if (is_failed) call error_stop(code=1)
  call u%finish_and_terminate()
end program main
