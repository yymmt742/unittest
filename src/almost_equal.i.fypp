#:include "common.fypp"
#:for routine in ["assert_almost_equal", "assert_not_almost_equal"]
#:for kind, type, post in INTEGER_KIND_TYPE_POSTS + REAL_KIND_TYPE_POSTS + COMPLEX_KIND_TYPE_POSTS
#:for rank2 in [0, 1]
#:for rank1 in [0, 1]
  module subroutine ${routine_name(routine, post, rank1, rank2)}$ (this, a, b, unitname, place)
    class(unittest), intent(inout) :: this
    ${type}$, intent(in)     :: a${rank_suffix(rank1)}$, b${rank_suffix(rank2)}$
    character(*), intent(in)       :: unitname
    integer, intent(in), optional  :: place
  end subroutine ${routine_name(routine, post, rank1, rank2)}$

#:endfor
#:endfor
#:endfor
#:endfor
