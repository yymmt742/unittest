#:include "common.fypp"
#:set ktps = [INTEGER_KIND_TYPE_POSTS, REAL_KIND_TYPE_POSTS]
#:set fmts = [INTEGER_FORMAT, REAL_FORMAT]
#:set routines = ["less", "less_equal", "greater", "greater_equal"]
#:set ops = ["<", "<=", ">", ">="]
#:def success(rank1, rank2, op)
          success = a${counter_suffix(rank1)}$${op}$b${counter_suffix(rank2)}$
#:enddef
submodule(mod_unittest) compare
  implicit none
contains
#:include "report_functions.fypp"
#:for ktp, fm in zip(ktps, fmts)
#:for kind, type, post in ktp
#:for routine, op, rate in zip(routines, ops, ["REAL(a - b, RK)", "REAL(a - b, RK)", "REAL(b - a, RK)", "REAL(b - a, RK)"])
#:for rank1, rank2 in RANK_ITERii
  module procedure ${routine_name(routine, post, rank1, rank2)}$
${common_check(rank1, rank2, routine)}$
    err = ${"ALL" if rank1>0 else ""}$(a ${negation(op)}$ b)
${error_list(routine, op, fm, rank1, rank2, rate, success(rank1, rank2, op))}$
  end procedure ${routine_name(routine, post, rank1, rank2)}$
!
#:endfor
#:endfor
#:endfor
#:endfor
include "result_functions.f90"
include "image_functions.f90"
end submodule compare
